/***** Initializing Global Variables *****/
SET @StartDate = '2019-04-16';
SET @EndDate = '2019-04-19';
SET @ProgramID = '';
SET @vdn = '';
SET @CustomGroup = 'CustomGroup';
SET @ColumnName = '';
SET @VACATargetColumn = '';
SET @APCR_AgentCalls_Threshold = 50;
SET @ModelFilterCriteria = '';
SET @VACATableName = '';
SET @ModelDataTableName = '';
SET @ModelDataOutcomeColumn = '';
SET @ModelName = '';
SET @consolidationOption = 'skill';
/***** Initializing Model Variables *****/
SET @ProgramID = 'TMobileIRT';
SET @ColumnName = 'Optimization2';
SET @VACATargetColumn = 'RGU';
SET @ModelFilterCriteria = "ProgramID = 'TMobileIRT'";
SET @VACATableName = 'tmobile.vaca';
/***** Initializing Datasources *****/
SET @StartDate = '2019-04-16';
SET @EndDate = '2019-04-19';
DROP TEMPORARY TABLE IF EXISTS tempdb.datasource_table_4;
CREATE TEMPORARY TABLE IF NOT EXISTS tempdb.datasource_table_4
SELECT * FROM `engine.evaluatorlog`
WHERE 
calltime BETWEEN DATE_SUB('2019-04-16', INTERVAL 0 DAY) AND '2019-04-19' AND ProgramID = 'TMobileIRT';
/***** Initializing Metric Variables *****/
/***** Initializing Metric-Datasource *****/
DROP TEMPORARY TABLE IF EXISTS tempdb.metricDatasource_4;
CREATE TEMPORARY TABLE IF NOT EXISTS tempdb.metricDatasource_4
SELECT
date(calltime) CallDate, Skill, UPPER(RIGHT(EvalAlgoUsed, 2)) L1_L2, On_Off, nAgents, nCalls
FROM
	tempdb.datasource_table_4;